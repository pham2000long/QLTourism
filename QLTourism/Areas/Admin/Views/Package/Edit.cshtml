@model QLTourism.Models.Package

@{
    ViewBag.Title = "Edit";
    Layout = "~/Areas/Admin/Views/Shared/_LayoutAdmin.cshtml";
    var ImagePath = "~/Areas/Admin/wwwroot/thumbail/" + Model.thumbail;
    string stringDesc = "";
    if (Model.pkgDesc != null)
    {
        stringDesc = Model.pkgDesc.Replace(System.Environment.NewLine, "");
    }
}

<h2>Sửa tour du lịch</h2>

@if (ViewBag.Error != null)
{
    <br />
    <div class="alert alert-danger" role="alert">@ViewBag.Error</div>
}
@using (Html.BeginForm(Html.BeginForm("Edit", "Package", FormMethod.Post, new { enctype = "multipart/form-data" })))
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @Html.HiddenFor(model => model.id)

        <div class="row">
            <div class="col-md-6">
                <div class="form-group">
                    @Html.LabelFor(model => model.pkgName, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.pkgName, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.pkgName, "", new { @class = "text-danger" })
                    </div>
                </div>
                <div class="form-group">
                    @Html.LabelFor(model => model.pkgStartDate, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @*@Html.EditorFor(model => model.pkgStartDate, new { htmlAttributes = new { @class = "form-control" } })*@
                        <div class="input-group">
                            <input type="text" class="form-control" placeholder="yyyy/mm/dd" id="datepicker-autoclose" name="pkgStartDate" data-provide="datepicker" data-date-format="yyyy/mm/dd" value="@(((DateTime)Model.pkgStartDate).ToString("yyyy/MM/dd"))">
                            <div class="input-group-append bg-custom b-0"><span class="input-group-text"><i class="mdi mdi-calendar"></i></span></div>
                        </div><!-- input-group -->
                        @Html.ValidationMessageFor(model => model.pkgStartDate, "", new { @class = "text-danger" })
                    </div>
                </div>
                <div class="form-group">
                    @Html.LabelFor(model => model.pkgStartPlace, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.pkgStartPlace, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.pkgStartPlace, "", new { @class = "text-danger" })
                    </div>
                </div>
                <div class="form-group">
                    @Html.LabelFor(model => model.pkgTransporter, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.pkgTransporter, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.pkgTransporter, "", new { @class = "text-danger" })
                    </div>
                </div>
                <div class="form-group">
                    @Html.LabelFor(model => model.pkgBasePrice, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.pkgBasePrice, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.pkgBasePrice, "", new { @class = "text-danger" })
                    </div>
                </div>
            </div>
            <div class="col-md-6">
                <div class="form-group">
                    @Html.LabelFor(model => model.categoryId, "Danh mục", htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        <select class="form-control" id="categoryId" name="categoryId">
                            <option value="0">Tất cả danh mục</option>
                            @foreach (var item in @ViewBag.categoryId)
                            {
                                <option value="@item.id" @(item.id == Model.categoryId ? "selected" : "" )>@item.name</option>
                            }
                        </select>
                        @Html.ValidationMessageFor(model => model.categoryId, "", new { @class = "text-danger" })
                    </div>
                </div>
                <div class="form-group">
                    @Html.LabelFor(model => model.pkgTimePeriod, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.pkgTimePeriod, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.pkgTimePeriod, "", new { @class = "text-danger" })
                    </div>
                </div>
                <div class="form-group">
                    @Html.LabelFor(model => model.pkgEndPlace, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.pkgEndPlace, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.pkgEndPlace, "", new { @class = "text-danger" })
                    </div>
                </div>
                <div class="form-group">
                    @Html.LabelFor(model => model.pkgCondition, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.pkgCondition, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.pkgCondition, "", new { @class = "text-danger" })
                    </div>
                </div>
                <div class="form-group">
                    @Html.LabelFor(model => model.pkgSlot, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.pkgSlot, new { htmlAttributes = new { @type = "number", @min = "0", @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.pkgSlot, "", new { @class = "text-danger" })
                    </div>
                </div>
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.thumbail, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                <div class="col-md-3">
                    <input type="file" name="editImage" id="input-file-now-custom-1" class="dropify" data-default-file="@Url.Content(@ImagePath)" />
                </div>
                @Html.ValidationMessageFor(model => model.thumbail, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.pkgDesc, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @*@Html.EditorFor(model => model.pkgDesc, new { htmlAttributes = new { @class = "form-control" } })*@
                <textarea id="elm1" class="form-control" name="pkgDesc"></textarea>
                @Html.ValidationMessageFor(model => model.pkgDesc, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.pkgRules, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.pkgRules, new { htmlAttributes = new { @class = "form-control" } })
                @*<textarea id="elm1" class="form-control" name="pkgRules"></textarea>*@
                @Html.ValidationMessageFor(model => model.pkgRules, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.active, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.active, new { htmlAttributes = new { @type = "number", @min = "0", @max = "4", @step = "1", @value = "0", @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.active, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Lưu" class="btn btn-primary" /> <a href="/Admin/Package/" class="btn btn-danger">Trở về</a>
            </div>
        </div>
    </div>
}

<script>
    if (document.readyState !== 'loading') {
        console.log('document is already ready, just execute code here');
        myInitCode();
    } else {
        document.addEventListener('DOMContentLoaded', function () {
            setTimeout(function () {
                console.log('Loaded page');
                tinymce.get('elm1').setContent('@Html.Raw(stringDesc)');
            }, 1500);
        });
    }

</script>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
